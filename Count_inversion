class Solution:
    #User function Template for python3
    #Function to count inversions in the array.
    def inversionCount(self, arr):
        # Your Code Here
        def merge_sort(arr):
            if len(arr) <= 1:
                return arr,0
            
            mid = len(arr) // 2
            left,li = merge_sort(arr[:mid])
            right,ri = merge_sort(arr[mid:])
            merged =[]
            i = j = 0
            res = 0
            while i< len(left) and j < len(right):
                if left[i] <= right[j]:
                    merged.append(left[i])
                    i += 1
                else:
                    merged.append(right[j])
                    res += (len(left)-i)
                    j += 1
            merged.extend(left[i:])
            merged.extend(right[j:])
            res = li+ri+res
            return merged,res
        x,y = merge_sort(arr)
        return y
#{ 
 # Driver Code Starts
#Initial Template for Python 3

import atexit
import io
import sys

_INPUT_LINES = sys.stdin.read().splitlines()
input = iter(_INPUT_LINES).__next__
_OUTPUT_BUFFER = io.StringIO()
sys.stdout = _OUTPUT_BUFFER


@atexit.register
def write():
    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())


if __name__ == '__main__':
    t = int(input())
    for tt in range(t):
        a = list(map(int, input().strip().split()))
        obj = Solution()
        print(obj.inversionCount(a))
        print("~")

# } Driver Code Ends
